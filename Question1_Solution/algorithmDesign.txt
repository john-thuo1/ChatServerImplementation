# Fan of Processes/version1

# The idea is to have Child processes with the same Parent Process.
i.e  first process --> Child Process  -------> Child Process ---------> n
     (Parent 1)         (Child of Parent 1)     (Child of Parent 1)
                                    
1. Pass in number of child procceses to create as a command line argument.

2. Child Process creation in the main function
   i)  Check if user passed in a command line argument;if they did, proceed, if not,notify the user and exit the program.
   ii) Create multiple processes using a for loop
   iii)If creating process fails (if (fork <0)); then exit with a message to notify the user
   iv) If( fork() == 0 ); then create a child process, 
   v)  Within the child process creation block, print the child's pid and that of the parent and exit.
   vi) Wait for all the child processes to be created.
   
3. End/return 0;

#-------------------------------------------------------------------------------------------------------------------------------------------------------------

# Chain of Processes/version2

# For chain of processes, the first process created is the parent process. The child process then creates another child process 
and becomes the parent process of the new child process and so on.
i.e  first process --> Child Process  -------> Child Process ---------> n
     (Parent 1)         (Child of Parent 1     (Child of Parent 2
                         and Parent 2)           and Parent 3)
 
1. Pass in number of child procceses to create as a command line argument.

2. Process creation in the main function
   i)  Initialize a process id variable
   ii) Check if user passed in a command line argument;if they did, proceed, if not,notify the user and exit the program.
   iii)Create multiple processes using a for loop and the command line argument passed in
   iv) if(fork>0 ) i.e parent process, wait for the child process to be created and then break.
   v)  Else -print the child process id and the parent process id to confirm if this is indeed a chain of processes
   vi) Wait for the process creation to end.
   
3. End/return 0;
   
 
